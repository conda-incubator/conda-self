name: conda-self tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.os }}, py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["39", "310", "311", "312"]
        include:
          - os: macos-13
            python-version: "39"
          - os: macos-14
            python-version: "312"

    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          environments: test-py${{ matrix.python-version }}
      - name: Ensure package is installed
        run: pixi reinstall --environment test-py${{ matrix.python-version }} conda-self
      - name: Setup project
        run: |
          echo "channels: [conda-forge]" > .pixi/envs/test-py${{ matrix.python-version }}/.condarc
          pixi run --environment test-py${{ matrix.python-version }} conda info
      - name: Run tests
        run: pixi run --environment test-py${{ matrix.python-version }} test --basetemp=${{ runner.os == 'Windows' && 'D:\temp' || runner.temp }}

  build-conda:
    name: Build conda package (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    env:
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          environments: build
      - name: Build recipe
        run: pixi run --environment build build
